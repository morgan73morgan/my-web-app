# Generated by Django 5.2.3 on 2025-06-13 07:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import services.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Contract #')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated')], default='draft', max_length=20, verbose_name='Status')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Amount')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Discount')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Tax Rate %')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Tax Amount')),
                ('final_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Final Amount')),
                ('terms', models.TextField(blank=True, verbose_name='Terms and Conditions')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('contract_file', models.FileField(blank=True, null=True, upload_to=services.models.contract_upload_path, verbose_name='Contract File')),
                ('signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Signed At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_contracts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contracts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Contract',
                'verbose_name_plural': 'Service Contracts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Payment #')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('insurance', 'Insurance')], max_length=20, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20, verbose_name='Status')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='Transaction ID')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('receipt_sent', models.BooleanField(default=False, verbose_name='Receipt Sent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payments', to=settings.AUTH_USER_MODEL)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='services.servicecontract')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Service Name')),
                ('code', models.CharField(help_text='Internal service code', max_length=50, unique=True, verbose_name='Service Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('service_type', models.CharField(choices=[('consultation', 'Consultation'), ('procedure', 'Procedure'), ('diagnostic', 'Diagnostic'), ('therapy', 'Therapy'), ('other', 'Other')], max_length=20, verbose_name='Service Type')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('duration', models.PositiveIntegerField(help_text='Duration of the service', verbose_name='Duration')),
                ('duration_unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days')], default='minutes', max_length=10, verbose_name='Duration Unit')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('requires_specialist', models.BooleanField(default=True, verbose_name='Requires Specialist')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Item',
                'verbose_name_plural': 'Service Items',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_number', models.CharField(editable=False, max_length=20, unique=True, verbose_name='Appointment #')),
                ('appointment_date', models.DateField(verbose_name='Appointment Date')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End Time')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_appointments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL)),
                ('specialist', models.ForeignKey(limit_choices_to={'groups__name': 'Specialists'}, on_delete=django.db.models.deletion.PROTECT, related_name='service_schedule', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appointments', to='services.serviceitem')),
            ],
            options={
                'verbose_name': 'Service Appointment',
                'verbose_name_plural': 'Service Appointments',
                'ordering': ['-appointment_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ContractService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Price')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount')),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Total Price')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_services', to='services.servicecontract')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='services.serviceitem')),
            ],
            options={
                'verbose_name': 'Contract Service',
                'verbose_name_plural': 'Contract Services',
            },
        ),
        migrations.AddIndex(
            model_name='serviceitem',
            index=models.Index(fields=['is_active'], name='services_se_is_acti_ab34e2_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceitem',
            index=models.Index(fields=['category'], name='services_se_categor_330c11_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceitem',
            index=models.Index(fields=['service_type'], name='services_se_service_6554be_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceappointment',
            index=models.Index(fields=['appointment_date', 'start_time'], name='services_se_appoint_17885f_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceappointment',
            index=models.Index(fields=['client'], name='services_se_client__e817fd_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceappointment',
            index=models.Index(fields=['specialist'], name='services_se_special_7df577_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceappointment',
            index=models.Index(fields=['status'], name='services_se_status_a40207_idx'),
        ),
    ]
