"""
Django settings for rehab_center project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-96_do+xr9_krlz#+r#edn+z$*=$eqrwec3&mu3rn#ra($p!kc2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Set to False in production

# Security middleware settings
SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds - enable for production
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_SSL_REDIRECT = False  # Set to True when using HTTPS in production
SESSION_COOKIE_SECURE = False  # Set to True in production
CSRF_COOKIE_SECURE = False  # Set to True in production

# For development only - specify exact hosts in production
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'documents.apps.DocumentsConfig',
    'django.contrib.humanize',

    # Third-party apps
    'django_select2',
    'axes',            # Brute-force protection
    'auditlog',        # User action audit
    'guardian',        # Object-level permissions
    'rest_framework',  # DRF for API
    # Интеграционные модули
    'fhir.resources',
    'hl7apy',
    'zeep',

    # Local apps
    'core.apps.CoreConfig',
    'inpatient.apps.InpatientConfig',
    'medical_history.apps.MedicalHistoryConfig',
    'rehab_programs.apps.RehabProgramsConfig',
    'commissions.apps.CommissionsConfig',
    'analytics.apps.AnalyticsConfig',
    'patient_portal.apps.PatientPortalConfig',
    'medical_codes.apps.MedicalCodesConfig',
    'emr.apps.EmrConfig',
    'services.apps.ServicesConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'core.middleware.MaintenanceModeMiddleware',
    'axes.middleware.AxesMiddleware',  # Brute-force protection
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rehab_center.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.theme',  # Add theme context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'rehab_center.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 10},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Redirect users after login and logout
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# EMR Settings
EMR_SETTINGS = {
    'DOCUMENT_STORAGE_DAYS': 5 * 365,  # 5 years for regular documents
    'MEDICAL_RECORD_STORAGE_DAYS': 25 * 365,  # 25 years for medical records
    'ENCRYPTION_KEYS_DIR': BASE_DIR / 'encryption_keys',
    'AUDIT_LOG_DIR': BASE_DIR / 'logs/audit',
}

# Security settings for production
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    X_FRAME_OPTIONS = 'DENY'

# django-axes settings
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1  # hours
AXES_LOCKOUT_TEMPLATE = 'core/lockout.html'
AXES_RESET_ON_SUCCESS = True

# django-guardian settings
ANONYMOUS_USER_NAME = 'anonymous_guardian'

# django-auditlog settings
AUDITLOG_INCLUDE_ALL_MODELS = True

# REST Framework settings (пример)
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# .env file loading (python-dotenv)
from dotenv import load_dotenv
load_dotenv(dotenv_path=BASE_DIR / '.env')

# Переопределяем секреты/настройки из переменных окружения, если они заданы
SECRET_KEY = os.getenv('SECRET_KEY', SECRET_KEY)
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.yandex.ru')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'password_here')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', 'noreply@example.com')

# Email settings (замените на реальные SMTP-данные вашей организации)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'noreply@example.com'
EMAIL_USE_TLS = True

# AUTHENTICATION_BACKENDS для axes + guardian (современный вариант для Django 5.x)
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',  # Brute-force protection
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
]

# Локальные настройки, если нужно
try:
    from .local_settings import *
except ImportError:
    pass