# Generated by Django 5.2.3 on 2025-06-12 14:59

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0004_specialization_specialistprofile'),
        ('medical_codes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_number', models.CharField(help_text='Уникальный номер медицинской карты', max_length=50, unique=True, verbose_name='Номер карты')),
                ('allergies', models.TextField(blank=True, help_text='Укажите аллергические реакции и непереносимость лекарств', verbose_name='Аллергии и реакции')),
                ('chronic_diseases', models.TextField(blank=True, help_text='Наличие хронических заболеваний', verbose_name='Хронические заболевания')),
                ('disability', models.CharField(blank=True, choices=[('no', 'Нет'), ('I', 'I группа'), ('II', 'II группа'), ('III', 'III группа'), ('child', 'Ребенок-инвалид')], default='no', max_length=5, verbose_name='Инвалидность')),
                ('disability_details', models.TextField(blank=True, help_text='Дополнительная информация об инвалидности', verbose_name='Дополнительно об инвалидности')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_record', to='core.patient', verbose_name='Пациент')),
            ],
            options={
                'verbose_name': 'Медицинская карта',
                'verbose_name_plural': 'Медицинские карты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('test_name', models.CharField(max_length=255, verbose_name='Название исследования')),
                ('test_type', models.CharField(choices=[('blood', 'Анализ крови'), ('urine', 'Анализ мочи'), ('imaging', 'Визуализация'), ('biopsy', 'Биопсия'), ('microbiology', 'Микробиология'), ('genetic', 'Генетический анализ'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип исследования')),
                ('result_numeric', models.FloatField(blank=True, help_text='Числовое значение результата, если применимо', null=True, verbose_name='Числовой результат')),
                ('result_text', models.TextField(blank=True, help_text='Текстовое описание результата', verbose_name='Текстовый результат')),
                ('reference_range', models.CharField(blank=True, help_text='Нормальный диапазон значений', max_length=100, verbose_name='Референсные значения')),
                ('unit', models.CharField(blank=True, help_text='Единицы измерения результата', max_length=20, verbose_name='Единицы измерения')),
                ('is_abnormal', models.BooleanField(default=False, help_text='Отмечено, если результат выходит за пределы нормы', verbose_name='Отклонение от нормы')),
                ('collected_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время забора')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время обработки')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('result_file', models.FileField(blank=True, null=True, upload_to='test_results/%Y/%m/%d/', verbose_name='Файл с результатами')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='emr.medicalrecord', verbose_name='Медицинская карта')),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_tests', to=settings.AUTH_USER_MODEL, verbose_name='Назначил')),
            ],
            options={
                'verbose_name': 'Результат исследования',
                'verbose_name_plural': 'Результаты исследований',
                'ordering': ['-collected_at', 'test_name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecordEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entry_type', models.CharField(choices=[('examination', 'Осмотр'), ('diagnosis', 'Диагноз'), ('treatment', 'Лечение'), ('procedure', 'Процедура'), ('test_result', 'Результат анализа'), ('note', 'Заметка'), ('referral', 'Направление'), ('consultation', 'Консультация')], default='note', max_length=20, verbose_name='Тип записи')),
                ('title', models.CharField(help_text='Краткое описание записи', max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(help_text='Подробное описание', verbose_name='Содержание')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время записи')),
                ('is_confidential', models.BooleanField(default=False, help_text='Доступно только уполномоченному персоналу', verbose_name='Конфиденциально')),
                ('is_important', models.BooleanField(default=False, help_text='Выделить как важную информацию', verbose_name='Важная запись')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_medical_entries', to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('diagnosis', models.ManyToManyField(blank=True, related_name='medical_entries', to='medical_codes.icd10code', verbose_name='Диагнозы (МКБ-10)')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='emr.medicalrecord', verbose_name='Медицинская карта')),
            ],
            options={
                'verbose_name': 'Запись в медицинской карте',
                'verbose_name_plural': 'Записи в медицинских картах',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['medical_record', 'entry_type', 'created_at'], name='emr_medical_medical_eb48ff_idx'), models.Index(fields=['created_at'], name='emr_medical_created_8f96d5_idx'), models.Index(fields=['is_important'], name='emr_medical_is_impo_b6f270_idx')],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Краткое описание назначения', max_length=255, verbose_name='Название назначения')),
                ('description', models.TextField(help_text='Детальное описание назначения, дозировки и т.д.', verbose_name='Подробное описание')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('active', 'Активно'), ('completed', 'Выполнено'), ('cancelled', 'Отменено'), ('expired', 'Просрочено')], default='draft', max_length=20, verbose_name='Статус')),
                ('frequency', models.CharField(choices=[('once', 'Однократно'), ('daily', 'Ежедневно'), ('bid', 'Дважды в день'), ('tid', 'Трижды в день'), ('qid', '4 раза в день'), ('q4h', 'Каждые 4 часа'), ('q6h', 'Каждые 6 часов'), ('q8h', 'Каждые 8 часов'), ('q12h', 'Каждые 12 часов'), ('qod', 'Через день'), ('weekly', 'Еженедельно'), ('as_needed', 'По требованию')], default='once', help_text='Как часто следует выполнять назначение', max_length=20, verbose_name='Периодичность')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Когда начинать выполнение назначения', verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, help_text='Когда заканчивается срок действия назначения', null=True, verbose_name='Дата окончания')),
                ('is_prn', models.BooleanField(default=False, help_text='Принимать по мере необходимости', verbose_name='По требованию (ПРН)')),
                ('prn_reason', models.TextField(blank=True, help_text='Причина приема по требованию', verbose_name='Причина ПРН')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_prescriptions', to=settings.AUTH_USER_MODEL, verbose_name='Назначил')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='emr.medicalrecord', verbose_name='Медицинская карта')),
            ],
            options={
                'verbose_name': 'Назначение',
                'verbose_name_plural': 'Назначения',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['medical_record', 'status'], name='emr_prescri_medical_d921ba_idx'), models.Index(fields=['start_date', 'end_date'], name='emr_prescri_start_d_bc485a_idx'), models.Index(fields=['status'], name='emr_prescri_status_5c58f9_idx')],
            },
        ),
    ]
